name: Automação de Projetos GitHub

on:
  pull_request:
    types: [opened, synchronize, closed]
  issues:
    types: [closed]
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Aprovação Automática de PRs
  auto-approve:
    runs-on: ubuntu-latest
    steps:
      - name: Auto Approve PR
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.PAT_GITHUB_TOKEN }}

  # Fechar Issues automaticamente quando PRs são mergeados
  auto-close-issues:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Fechar Issues vinculadas ao PR
        uses: peter-evans/close-issue@v2

  # Criar nova task quando um bug for resolvido
  create-review-task:
    runs-on: ubuntu-latest
    if: github.event.issue.state == 'closed'
    steps:
      - name: Criar uma nova issue para revisão
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Revisão da solução do Bug #" + context.payload.issue.number,
              body: "O bug #" + context.payload.issue.number + " foi resolvido. Precisamos revisar a implementação para garantir estabilidade.",
              labels: ["review", "bugfix"]
            });

  # Criar Issues automaticamente a partir de "// TODO:" no código
  create_todo_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências
        run: pip install requests

      - name: Rodar Script para Criar Issues
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}
          REPO_OWNER: "FlavioWillian"  # Substitua pelo seu usuário ou organização
          REPO_NAME: "auto-pr-py-ci-cd" # Substitua pelo nome correto do repositório
          PROJECT_NUMBER: "1" # Número do projeto no GitHub
        run: python scripts/create_issues.py

  # Gerar Changelog Automático
  generate-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Gerar Changelog
        uses: metcalfc/changelog-generator@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit do novo Changelog
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add CHANGELOG.md
          git commit -m "Atualização automática do Changelog [skip ci]" || exit 0
          git push origin main

  # Atribuir revisores automaticamente para PRs
  auto-assign-reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Auto Assign Reviewers
        uses: hmarr/auto-assign-reviewers@v1
        with:
          reviewers: "flaviowillian"
